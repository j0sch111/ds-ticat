ARG BASE_IMAGE=amazonlinux:2023
ARG PIXI_VERSION=0.24.2
ARG PACKAGE_NAME=ds_ticat

# Builder stage
FROM --platform=$TARGETPLATFORM ubuntu:24.04 AS builder
ARG PIXI_VERSION

# Install curl and download pixi
RUN apt-get update && \
    apt-get install -y curl && \
    curl -Ls "https://github.com/prefix-dev/pixi/releases/download/v${PIXI_VERSION}/pixi-$(uname -m)-unknown-linux-musl" -o /pixi && \
    chmod +x /pixi && \
    /pixi --version

# Main stage
FROM --platform=$TARGETPLATFORM ${BASE_IMAGE}

# Set environment variables
ENV CODE_DIR=/opt/ml/code
ENV MODEL_DIR=/opt/ml/model
ENV INPUT_DIR=/opt/ml/input
ENV DATA_DIR=/opt/ml/input/data
ENV PYTHONPATH=${CODE_DIR}

# Copy Pixi from builder stage
COPY --from=builder --chown=root:root --chmod=0555 /pixi /usr/local/bin/pixi

# Create necessary directories
RUN mkdir -p $CODE_DIR $MODEL_DIR $INPUT_DIR $DATA_DIR

# Set working directory
WORKDIR /opt/ml/

# Install system dependencies and Java
RUN dnf update -y && \
    dnf install -y which gcc java-11-amazon-corretto-headless && \
    dnf clean all

# Copy files
COPY src/ code/
COPY data/ input/data/
COPY models/ model/
COPY pyproject.toml pyproject.toml
COPY infrastructure/sagemaker/ ./code/sagemaker
COPY infrastructure/containers/utils/container_debug_utils/ container_debug_utils/

# Install Python dependencies with Pixi
RUN pixi install -e sagemaker

# Set the entrypoint
ENTRYPOINT pixi run -e sagemaker python3 $CODE_DIR/sagemaker/entrypoint.py

# Uncomment for debugging if needed
# CMD ["tail", "-f", "/dev/null"]
